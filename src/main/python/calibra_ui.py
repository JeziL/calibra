from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *

from eqn_solver import solve

class CalibraForm(QMainWindow):
    def __init__(self, app_context, parent=None):
        QMainWindow.__init__(self, parent)
        self.app_context = app_context
        self.init_main_frame()

    def init_main_frame(self):
        self.main_frame = QWidget()
        self.left_frame = QWidget()
        self.btn_frame = QWidget()
        self.right_frame = QWidget()

        self.init_controls()

        layout = QVBoxLayout()
        layout.addWidget(self.d1_frame)
        layout.addWidget(self.d3_frame)
        layout.addWidget(self.ver1_frame)
        layout.addWidget(self.hor1_frame)
        layout.addWidget(self.d2_frame)
        layout.addWidget(self.d4_frame)
        layout.addWidget(self.ver2_frame)
        layout.addWidget(self.hor2_frame)
        self.left_frame.setLayout(layout)

        layout = QVBoxLayout()
        layout.addWidget(self.btn)
        self.btn_frame.setLayout(layout)

        layout = QVBoxLayout()
        layout.addWidget(self.x_frame)
        layout.addWidget(self.y_frame)
        layout.addWidget(self.v_frame)
        layout.addWidget(self.z_frame)
        layout.addWidget(self.u_frame)
        self.right_frame.setLayout(layout)

        layout = QHBoxLayout()
        layout.addWidget(self.left_frame)
        layout.addWidget(self.btn_frame)
        layout.addWidget(self.right_frame)
        self.main_frame.setLayout(layout)

        self.setCentralWidget(self.main_frame)
    
    def init_controls(self):
        self.d1_frame = QWidget()
        layout = QHBoxLayout()
        self.d1 = QDoubleSpinBox()
        self.d1.setSingleStep(0.1)
        self.d1.setDecimals(3)
        self.d1.setValue(10.203)
        layout.addWidget(QLabel("雷达距离1: "))
        layout.addWidget(self.d1)
        self.d1_frame.setLayout(layout)

        self.d2_frame = QWidget()
        layout = QHBoxLayout()
        self.d2 = QDoubleSpinBox()
        self.d2.setSingleStep(0.1)
        self.d2.setDecimals(3)
        self.d2.setValue(14.123)
        layout.addWidget(QLabel("雷达距离2: "))
        layout.addWidget(self.d2)
        self.d2_frame.setLayout(layout)

        self.d3_frame = QWidget()
        layout = QHBoxLayout()
        self.d3 = QDoubleSpinBox()
        self.d3.setSingleStep(0.1)
        self.d3.setDecimals(3)
        self.d3.setValue(11.377)
        layout.addWidget(QLabel("转台距离1: "))
        layout.addWidget(self.d3)
        self.d3_frame.setLayout(layout)

        self.d4_frame = QWidget()
        layout = QHBoxLayout()
        self.d4 = QDoubleSpinBox()
        self.d4.setSingleStep(0.1)
        self.d4.setDecimals(3)
        self.d4.setValue(15.258)
        layout.addWidget(QLabel("转台距离2: "))
        layout.addWidget(self.d4)
        self.d4_frame.setLayout(layout)

        self.ver1_frame = QWidget()
        layout = QHBoxLayout()
        self.ver1 = QDoubleSpinBox()
        self.ver1.setSingleStep(0.1)
        self.ver1.setDecimals(3)
        self.ver1.setMinimum(-100)
        self.ver1.setValue(-2.88)
        layout.addWidget(QLabel("转台俯仰角1: "))
        layout.addWidget(self.ver1)
        self.ver1_frame.setLayout(layout)

        self.hor1_frame = QWidget()
        layout = QHBoxLayout()
        self.hor1 = QDoubleSpinBox()
        self.hor1.setSingleStep(0.1)
        self.hor1.setDecimals(3)
        self.hor1.setMinimum(-100)
        self.hor1.setValue(-49.25)
        layout.addWidget(QLabel("转台水平角1: "))
        layout.addWidget(self.hor1)
        self.hor1_frame.setLayout(layout)

        self.ver2_frame = QWidget()
        layout = QHBoxLayout()
        self.ver2 = QDoubleSpinBox()
        self.ver2.setSingleStep(0.1)
        self.ver2.setDecimals(3)
        self.ver2.setMinimum(-100)
        self.ver2.setValue(-2.05)
        layout.addWidget(QLabel("转台俯仰角2: "))
        layout.addWidget(self.ver2)
        self.ver2_frame.setLayout(layout)

        self.hor2_frame = QWidget()
        layout = QHBoxLayout()
        self.hor2 = QDoubleSpinBox()
        self.hor2.setSingleStep(0.1)
        self.hor2.setDecimals(3)
        self.hor2.setMinimum(-100)
        self.hor2.setValue(-48.26)
        layout.addWidget(QLabel("转台水平角2: "))
        layout.addWidget(self.hor2)
        self.hor2_frame.setLayout(layout)

        self.btn = QPushButton("计算")
        self.btn.clicked.connect(self.on_calc)

        self.x_frame = QWidget()
        layout = QHBoxLayout()
        self.x = QLineEdit()
        self.x.setReadOnly(True)
        layout.addWidget(QLabel("delta x: "))
        layout.addWidget(self.x)
        self.x_frame.setLayout(layout)

        self.y_frame = QWidget()
        layout = QHBoxLayout()
        self.y = QLineEdit()
        self.y.setReadOnly(True)
        layout.addWidget(QLabel("delta y: "))
        layout.addWidget(self.y)
        self.y_frame.setLayout(layout)

        self.z_frame = QWidget()
        layout = QHBoxLayout()
        self.z = QLineEdit()
        self.z.setReadOnly(True)
        layout.addWidget(QLabel("Hor: "))
        layout.addWidget(self.z)
        self.z_frame.setLayout(layout)

        self.u_frame = QWidget()
        layout = QHBoxLayout()
        self.u = QLineEdit()
        self.u.setReadOnly(True)
        layout.addWidget(QLabel("Ver: "))
        layout.addWidget(self.u)
        self.u_frame.setLayout(layout)

        self.v_frame = QWidget()
        layout = QHBoxLayout()
        self.v = QLineEdit()
        self.v.setReadOnly(True)
        layout.addWidget(QLabel("delta z: "))
        layout.addWidget(self.v)
        self.v_frame.setLayout(layout)

    def on_calc(self):
        d1 = self.d1.value()
        d2 = self.d2.value()
        d3 = self.d3.value()
        d4 = self.d4.value()
        ver1 = self.ver1.value()
        hor1 = self.hor1.value()
        ver2 = self.ver2.value()
        hor2 = self.hor2.value()

        solu = solve(d1, d2, d3, d4, ver1, ver2, hor1, hor2)
        x, y, z, u, v = solu

        self.x.setText("{:.4f}".format(x))
        self.y.setText(str("{:.4f}".format(y)))
        self.z.setText(str("{:.4f}".format(z)))
        self.u.setText(str("{:.4f}".format(u)))
        self.v.setText(str("{:.4f}".format(v)))
